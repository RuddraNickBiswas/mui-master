[{"E:\\$REACT\\Z continue\\mui-master\\src\\index.js":"1","E:\\$REACT\\Z continue\\mui-master\\src\\reportWebVitals.js":"2","E:\\$REACT\\Z continue\\mui-master\\src\\App.js":"3","E:\\$REACT\\Z continue\\mui-master\\src\\theme\\theme.js":"4","E:\\$REACT\\Z continue\\mui-master\\src\\components\\ui\\Header.jsx":"5","E:\\$REACT\\Z continue\\mui-master\\src\\components\\Service.jsx":"6","E:\\$REACT\\Z continue\\mui-master\\src\\components\\About.jsx":"7"},{"size":619,"mtime":1610896897384,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":464,"mtime":1610897121677,"results":"11","hashOfConfig":"9"},{"size":331,"mtime":1610894383882,"results":"12","hashOfConfig":"9"},{"size":5368,"mtime":1610909133651,"results":"13","hashOfConfig":"9"},{"size":150,"mtime":1610895405839,"results":"14","hashOfConfig":"9"},{"size":833,"mtime":1610901385535,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vqdvef",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"E:\\$REACT\\Z continue\\mui-master\\src\\index.js",[],["34","35"],"E:\\$REACT\\Z continue\\mui-master\\src\\reportWebVitals.js",[],"E:\\$REACT\\Z continue\\mui-master\\src\\App.js",["36"],"import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Service from \"./components/Service\";\nimport Header from \"./components/ui/Header\";\n\n\n\nfunction App() {\n  return (\n   <BrowserRouter>\n   <Header />\n   <Switch>\n    <Route exact path = '/service' component = { ()=> (<div>Service</div>)} />\n   <Route exact path = '/about' component = {About}/>\n   </Switch>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n","E:\\$REACT\\Z continue\\mui-master\\src\\theme\\theme.js",["37"],"import { createMuiTheme } from \"@material-ui/core\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\n\r\n\r\nexport default createMuiTheme({\r\n    palette : {\r\n       \r\n    },\r\n    typography :{\r\n        button : {\r\n            textTransform : \"none\",\r\n        },\r\n        tab : {\r\n           marginLeft : 'auto'\r\n        }\r\n    }\r\n})","E:\\$REACT\\Z continue\\mui-master\\src\\components\\ui\\Header.jsx",["38","39"],"import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { AppBar, Button, IconButton, List, ListItem, ListItemText, Menu, MenuItem, SwipeableDrawer, Tab, Tabs, Toolbar, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n  },\r\n\r\n  tab: {\r\n    // width : \"100vh\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  tabButton: {\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    borderRadius: 0,\r\n  },\r\n  menu: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: \"white\",\r\n    borderRadius: \"0px\"\r\n  },\r\n  menuItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n    \"&:hover\": {\r\n      opacity: 1\r\n    }\r\n  },\r\n  drawer :{\r\n    padding :100\r\n  },\r\n\r\n}));\r\n\r\nexport default function Header() {\r\n  const [routeValue, setRouteValue] = React.useState(0);\r\n  const [activeIndex, setActiveIndex] = React.useState();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [openDrawer, setOpenDrawer] = React.useState(false);\r\n  const [openMenu, setOpenMenu] = React.useState(false);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(false);\r\n\r\n  const theme = useTheme()\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.down('md'))\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n  const handleRouteChange = (e, newValue) => {\r\n    setRouteValue(newValue);\r\n  };\r\n\r\n  const handleMenuClose = e => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  };\r\n  const handleMenuItemClick = (e, i) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n    setSelectedIndex(i);\r\n  };\r\n  const handleMenuOpen = e => {\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n    console.log(e)\r\n  }\r\n\r\n  const routes = [\r\n    { name: \"Home\", link: \"/\", activeIndex: 0 },\r\n    { name: \"Service\", link: \"/service\", activeIndex: 1 ,\r\n    mouseOver: event => handleMenuOpen(event)\r\n  },\r\n    { name: \"About\", link: \"/about\", activeIndex: 2 },\r\n  ];\r\n\r\n  const menuOptions = [\r\n    { name: \"Services\", link: \"/services\", activeIndex: 1, selectedIndex: 0 },\r\n    {\r\n      name: \"Custom Software Development\",\r\n      link: \"/customsoftware\",\r\n      activeIndex: 1,\r\n      selectedIndex: 1\r\n    },\r\n    {\r\n      name: \"iOS/Android App Development\",\r\n      link: \"/mobileapps\",\r\n      activeIndex: 1,\r\n      selectedIndex: 2\r\n    },\r\n    {\r\n      name: \"Website Development\",\r\n      link: \"/websites\",\r\n      activeIndex: 1,\r\n      selectedIndex: 3\r\n    },\r\n   \r\n  ];\r\n\r\n  const tabs =(\r\n    <>\r\n      <Tabs\r\n            className={classes.tab}\r\n            value={routeValue}\r\n            onChange={handleRouteChange}\r\n          >\r\n            {routes.map((route, i) => (\r\n              <Tab\r\n                component={Link}\r\n                label={route.name}\r\n                key={`${route.name}`}\r\n                to={route.link}\r\n                onMouseOver  = {route.mouseOver}\r\n              />\r\n            ))}\r\n\r\n            <Button className={classes.tabButton} variant=\"contained\">\r\n              hey\r\n            </Button>\r\n            <Menu id = 'simple-menu'\r\n            anchorEl = {anchorEl}\r\n            open ={openMenu}\r\n            onClose = {handleMenuClose}\r\n            MenuListProps = {{\r\n              onMouseLeave : handleMenuClose\r\n            }}\r\n            classes = {{paper :classes.menu}}\r\n            elevation = {0}\r\n            >\r\n              {menuOptions.map((option, i) => (\r\n                <MenuItem\r\n                key={`${option}${i}`}\r\n                className = {classes.menuItem}\r\n                component = {Link}\r\n                to = {option.link}\r\n                onClick = {event => {\r\n                  handleMenuItemClick(event , i);\r\n                  setRouteValue(1);\r\n                  handleMenuClose();\r\n                }}\r\n                selected = {i === selectedIndex && routeValue === 1 }\r\n                >\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Tabs>\r\n    </>\r\n  )\r\n  const drawer = (\r\n    <>\r\n    <SwipeableDrawer\r\n    open ={openDrawer}\r\n    onOpen = {() => setOpenDrawer(true)}\r\n    onClose = { () => setOpenDrawer(false)}\r\n    classes = {{paper : classes.drawerPaper}}\r\n    className = {classes.drawer}\r\n    >\r\n      <div className = {classes.toolbarMargin}></div>\r\n     <List disablePadding\r\n     \r\n     >\r\n       {routes.map((route , i) => (\r\n          <ListItem\r\n          key = {`${route}`}\r\n          divider\r\n          button\r\n          component = {Link}\r\n          \r\n          to = {route.link}\r\n          onClick = {() => {setOpenDrawer(false); setRouteValue(route.activeIndex)}}\r\n         \r\n          >\r\n          <ListItemText disableTypography>\r\n           {route.name}\r\n          </ListItemText>\r\n          </ListItem>\r\n       ))}\r\n     \r\n     </List>\r\n     \r\n    </SwipeableDrawer>\r\n      <IconButton\r\n      style = {{marginLeft : \"auto\"}}\r\n      className={classes.drawerIconContainer}\r\n      onClick={() => setOpenDrawer(!openDrawer)}\r\n      disableRipple\r\n    >\r\n     X\r\n    </IconButton>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <AppBar>\r\n        <Toolbar disableGutters>\r\n      {matches ? drawer : tabs}\r\n       \r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.toolbarMargin} />\r\n    </>\r\n  );\r\n}\r\n","E:\\$REACT\\Z continue\\mui-master\\src\\components\\Service.jsx",[],"E:\\$REACT\\Z continue\\mui-master\\src\\components\\About.jsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":15},{"ruleId":"44","severity":1,"message":"48","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"49","line":41,"column":10,"nodeType":"46","messageId":"47","endLine":41,"endColumn":21},{"ruleId":"44","severity":1,"message":"50","line":41,"column":23,"nodeType":"46","messageId":"47","endLine":41,"endColumn":37},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Service' is defined but never used.","Identifier","unusedVar","'pink' is defined but never used.","'activeIndex' is assigned a value but never used.","'setActiveIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]